
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.actinverflights;

import com.opencsv.CSVWriter;
import java.io.FileWriter;
import java.io.File;
import java.util.Date;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.List;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

/**
 *
 * @author mrchu
 */
public class IndividualSearch extends javax.swing.JPanel {

    public String savPath = "";
    public String rutaDriver = "";
    public int idNavegador = 0;
    private String ciudadOrigen = "";
    private String ciudadDestino = "";
    private String fecha = "";
    private String mesVuelo = "";
    private String diaVuelo = "";

    public String getFecha() {
        return fecha;
    }

    public void setFecha(String fecha) {
        this.fecha = fecha;
    }

    public String getMesVuelo() {
        return mesVuelo;
    }

    public void setMesVuelo(String mesVuelo) {
        this.mesVuelo = mesVuelo;
    }

    public String getDiaVuelo() {
        return diaVuelo;
    }

    public void setDiaVuelo(String diaVuelo) {
        this.diaVuelo = diaVuelo;
    }

    public String getCiudadOrigen() {
        return ciudadOrigen;
    }

    public void setCiudadOrigen(String ciudadOrigen) {
        this.ciudadOrigen = ciudadOrigen;
    }

    public String getCiudadDestino() {
        return ciudadDestino;
    }

    public void setCiudadDestino(String ciudadDestino) {
        this.ciudadDestino = ciudadDestino;
    }

    public String getRutaDriver() {
        return rutaDriver;
    }

    public void setRutaDriver(String rutaDriver) {
        this.rutaDriver = rutaDriver;
    }

    public int getIdNavegador() {
        return idNavegador;
    }

    public void setIdNavegador(int idNavegador) {
        this.idNavegador = idNavegador;
    }

    /**
     * Creates new form IndividualSearch
     */
    public IndividualSearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        origen = new javax.swing.JTextField();
        destino = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pasajeros = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        clase = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dia = new javax.swing.JComboBox<>();
        mes = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ingresa los datos de tu búsqueda");
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origen.setText("Ciudad de partida");
        origen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                origenActionPerformed(evt);
            }
        });

        destino.setText("Ciudade de dedstino");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("<html><p>Número de pasajeros :</p></html>");

        pasajeros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        pasajeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasajerosActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel6.setText("<html><p>Clase del asiento:</p></html>");

        clase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turista", "Turista premium", "Business", "Primera" }));
        clase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claseActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("<html><p>Ciudad de destino :</p></html>");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel4.setText("<html><p>Ciudad de salida :</p></html>");

        jButton2.setText("DESCARGAR DATOS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setText("<html><p>Elige una ruta para guardar los datos de la búsqueda</p></html>");
        jLabel2.setToolTipText("");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Examinar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel11.setText("<html><p>Mes de Vuelo: </p></html>");

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel12.setText("<html><p>Día de Vuelo: </p></html>");

        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaActionPerformed(evt);
            }
        });

        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(destino, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(origen, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(clase, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(pasajeros, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pasajeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void origenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_origenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_origenActionPerformed

    private void pasajerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasajerosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pasajerosActionPerformed

    private void claseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_claseActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setCiudadOrigen(this.origen.getText());
        this.setCiudadDestino(this.destino.getText());
        this.setMesVuelo((String) this.mes.getSelectedItem());
        this.setDiaVuelo((String) this.dia.getSelectedItem());
        this.savPath = jTextField1.getText();
        try {
            buscar();
        } catch (IOException | InterruptedException | ParseException ex) {
            Logger.getLogger(IndividualSearch.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Vuelos.class.getName()).log(Level.SEVERE, null, ex);
        }
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        this.savPath = archivo.getAbsolutePath();
        jTextField1.setText(this.savPath);
        System.out.println();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void diaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaActionPerformed

    private void mesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> clase;
    private javax.swing.JTextField destino;
    private javax.swing.JComboBox<String> dia;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> mes;
    private javax.swing.JTextField origen;
    private javax.swing.JComboBox<String> pasajeros;
    // End of variables declaration//GEN-END:variables

    public void buscar() throws IOException, InterruptedException, ParseException {
        
        //INCIALIZAMOS EL DRIVER DEL NAVEGADOR
        WebDriver driver = null;
        
        //VENTANA POR SI OCURRE ALGUN ERROR
        ErrorWindow window = new ErrorWindow();
        window.getjLabel1().setText("<html><p>Parece que el driver no corresponde al navegador seleccionado o el navegador seleccionado no se encuentra instalado en el equipo</p></html>");
        
        //EJECUTAMOS EL NAVEGADOR
        try {
            if (rutaDriver.equals("")) {
                window.setVisible(true);
            } else {
                if (this.idNavegador == 1) {
                    System.setProperty("webdriver.edge.driver", rutaDriver);
                    driver = new EdgeDriver();
                }
                if (this.idNavegador == 2) {
                    System.setProperty("webdriver.gecko.driver", rutaDriver);
                    driver = new FirefoxDriver();

                }
                if (this.idNavegador == 3) {
                    System.setProperty("webdriver.chrome.driver", rutaDriver);
                    driver = new ChromeDriver();
                }
            }

        } catch (Exception e) {
            window.setVisible(true);
        }
        
        //CARGAMOS LA PAGINA
        driver.get("https://www.google.com/travel/flights?tfs=CBwQARoaagwIAhIIL20vMDRzcWoSCjIwMjEtMDQtMjlwAYIBCwj___________8BQAFIAZgBAg&hl=es");
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
        WebDriverWait wait = new WebDriverWait(driver, 10);

        //INGRESAMOS LA FECHA EN LA BUSQUEDA
        clickDate(driver, wait);

        //INYECTAMOS LA CLASE DEL VUELO Y EL NUMERO DE PASAJEROS
        clickDatos(driver, wait);

        //DAMOS CLICK A LA CIUDAD DE ORIGEN Y LA CIUDAD DE DESTINO
        clickCities(driver, wait);

        //DAMOS CLICK EN EL BOTON DE BUSCAR
        WebElement searchButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@jsname='vLv7Lb']")));
        searchButton.click();

        //DESCARGAMOS LOS DATOS DE LA BUSQUEDA
        //Damaos click en el boton de escalas y selecionamos sin escalas
        WebElement escalasButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@jsname='XPtOyb']")));
        escalasButton.click();
        WebElement listaEsclaas = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@jsname='IW6exe']")));

        List<WebElement> inputsEsclaas = listaEsclaas.findElements(By.xpath("//li[@class='Bblesf']"));

        WebElement sinEscalasdiv = inputsEsclaas.get(1);
        sleep(1000);
        sinEscalasdiv.click();
        WebElement Xbutton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@jsname='plIjzf']")));
        Xbutton.click();
        sleep(1000);

        //Damos click en el boton de ordenar por costo
        WebElement divInfo = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='mi3osf NppLad']")));
        WebElement OrderByButton = divInfo.findElements(By.xpath("//button[@jsname='LgbsSe']")).get(3);
        OrderByButton.click();

        WebElement listaDesplegable = divInfo.findElement(By.xpath("//ul[@class='Akxp3 Kpu42c Lxea9c']"));
        WebElement option = listaDesplegable.findElement(By.xpath("//li[text()='Precio']"));
        option.click();
        sleep(10000);
        
        //Obtenemos la información de cada vuelo
        WebElement divVuelos = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='VKb8lb H4aYKc']")));
        List<WebElement> vuelos = divVuelos.findElements(By.xpath("//div[@class='mz0jqb taHBqe Qpcsfe']"));
        WebElement vuelo;
        String vueleo;

        //Guardamos la info de cadad vuelo en un arreglo 
        List<String[]> vuelosInfo = new ArrayList<>();
        String[] array = {"Fecha Consulta", "Fecha Vuelo", "Origen", "Destino", "Aerolinea", "Precio"};
        vuelosInfo.add(array);
        int i = 0;
        String[] registro;

        vuelo = divVuelos.findElements(By.xpath("//div[@class='mz0jqb taHBqe Qpcsfe']")).get(0);
        vueleo = vuelo.getText();
        registro = vueleo.split("\n");
        do {
            String[] infoVuelo = new String[6];
            if (registro.length >= 9) {
                //System.out.println("----------------" + i + "----------------");
                //System.out.println(registro[5]);
                //System.out.println(registro[6]);
                //System.out.println(registro[3]);
                //System.out.println(registro[8]);
                infoVuelo[0] = getDate("dd-MMM");
                infoVuelo[1] = this.getFecha();
                infoVuelo[2] = registro[5];                    //Origen
                infoVuelo[3] = registro[6].replace("–", "");   //Destino
                infoVuelo[4] = registro[3];                    //Aerolinea
                infoVuelo[5] = registro[8].replace(" MXN", "");//Precio
                infoVuelo[5] = infoVuelo[5].replace(".", "");
                vuelosInfo.add(infoVuelo);
            }
            i++;
            if (i <= divVuelos.findElements(By.xpath("//div[@class='mz0jqb taHBqe Qpcsfe']")).size() - 1) {

                registro = null;
                vuelo = divVuelos.findElements(By.xpath("//div[@class='mz0jqb taHBqe Qpcsfe']")).get(i);
                vueleo = vuelo.getText();
                registro = vueleo.split("\n");
            }
        } while (registro.length >= 9 && i <= divVuelos.findElements(By.xpath("//div[@class='mz0jqb taHBqe Qpcsfe']")).size() - 1);

        
        //GUARDAMOS LA INFORMACION EN UN CSV
        saveInfo(this.savPath, "ArchivoVuelosActinver", vuelosInfo);
        driver.quit();

    }

    public void clickDate(WebDriver driver, WebDriverWait wait) {

        //Concatenamos el mes y el dia
        String Fecha = this.diaVuelo + " de " + this.mesVuelo;
        this.setFecha(Fecha);
        //BUSCAMOS LA CAJA QUE TIENE LOS INPUTS DE LA CIUDAD i6
        WebElement citiesBox = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@jsname='OEtP0']")));
        List<WebElement> inputs = citiesBox.findElements(By.xpath("//input[@jsname='yrriRe']"));

        WebElement date = inputs.get(4);
        JavascriptExecutor js = (JavascriptExecutor) driver;
        date.clear();
        date.click();
        js.executeScript("arguments[0].value='" + this.getFecha() + "';", date);

        WebElement panel = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='akjk5c FrVb0c']")));

        WebElement readyButton = panel.findElement(By.xpath("//button[@class='VfPpkd-LgbsSe VfPpkd-LgbsSe-OWXEXe-k8QpJ VfPpkd-LgbsSe-OWXEXe-dgl2Hf nCP5yc AjY5Oe DuMIQc z18xM']"));

        readyButton.click();

    }

    public void clickDatos(WebDriver driver, WebDriverWait wait) {
        // SELECCIONAMOS LA CLASE
        String clase = (String) this.clase.getSelectedItem();
        WebElement claseButton = driver.findElements(By.xpath("//button[@class='VfPpkd-LgbsSe VfPpkd-LgbsSe-OWXEXe-INsAgc VfPpkd-LgbsSe-OWXEXe-Bz112c-UbuQg VfPpkd-LgbsSe-OWXEXe-dgl2Hf Rj2Mlf OLiIxf PDpWxe BobFtf']")).get(2);
        claseButton.click();

        WebElement claseOptions = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='A8nfpe yRXJAe iWO5td']")));
        WebElement claseOption = claseOptions.findElement(By.xpath("//li[text()='" + clase + "']"));
        claseOption.click();

        // SELECCIONAMOS EL NUMERO DE PASAJEROS
        String pasajeros = (String) this.pasajeros.getSelectedItem();

        //Damos click en el boton pasajeros
        WebElement pasajerosButton = driver.findElements(By.xpath("//button[@class='VfPpkd-LgbsSe VfPpkd-LgbsSe-OWXEXe-INsAgc VfPpkd-LgbsSe-OWXEXe-Bz112c-UbuQg VfPpkd-LgbsSe-OWXEXe-dgl2Hf Rj2Mlf OLiIxf PDpWxe BobFtf']")).get(1);
        pasajerosButton.click();

        //Damos click en el boton de adultos
        WebElement tabla = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//ul[@class='Xdzhob Lxea9c']")));
        WebElement numPasajerosMas = tabla.findElements(By.xpath("//button[@class='VfPpkd-LgbsSe VfPpkd-LgbsSe-OWXEXe-Bz112c-M1Soyc VfPpkd-LgbsSe-OWXEXe-dgl2Hf ksBjEc lKxP2d rGF6nb J5hQ8b']")).get(1);
        WebElement numPasajerosMenos = tabla.findElements(By.xpath("//button[@class='VfPpkd-LgbsSe VfPpkd-LgbsSe-OWXEXe-Bz112c-M1Soyc VfPpkd-LgbsSe-OWXEXe-dgl2Hf ksBjEc lKxP2d rGF6nb J5hQ8b']")).get(0);

        WebElement numPasajerosSpan = tabla.findElement(By.xpath("//span[@jsname='NnAfwf']"));

        //Verificamos si el numero de pasajeros ya es igual al numero de pasajeros que queremos
        if (!numPasajerosSpan.getText().equals(pasajeros)) {

            //Si es menor damos click en más hasta que sea igual
            while (Integer.parseInt(numPasajerosSpan.getText()) < Integer.parseInt(pasajeros)) {
                numPasajerosMas.click();
            }
            //Si es mayor damos clic en menos hasta que sea igual
            while (Integer.parseInt(numPasajerosSpan.getText()) > Integer.parseInt(pasajeros)) {
                numPasajerosMenos.click();
            }

        }

        //Damos click en listo
        WebElement listoButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='VfPpkd-LgbsSe ksBjEc lKxP2d bRx3h']")));
        listoButton.click();
    }

    public void clickCities(WebDriver driver, WebDriverWait wait) {
        //BUSCAMOS LA CAJA QUE TIENE LOS INPUTS DE LA CIUDAD i6
        WebElement citiesBox = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@jsname='OEtP0']")));
        List<WebElement> inputs = citiesBox.findElements(By.xpath("//input[@jsname='yrriRe']"));

        //INYECTAMOS LA CIUDAD DE ORIGEN 
        WebElement origen = inputs.get(0);
        JavascriptExecutor js = (JavascriptExecutor) driver;

        js.executeScript("arguments[0].value='" + this.ciudadOrigen + "';", origen);
        origen.click();
        //Obtenemos la lista deplegable
        //WebElement originListCities = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='A8nfpe yRXJAe P0ukfb a4gL0d TFC9me PRvvEd S7G7Bc Otspu iWO5td BDJ8fb']")));
        WebElement firstMatchO = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//li[@class='n4HaVc ']")));
        firstMatchO.click();

        //INYECTAMOS LA CIUDAD DE DESTINO    
        WebElement destino = inputs.get(2);
        //JavascriptExecutor js = (JavascwriptExecutor)driver;
        js.executeScript("arguments[0].value='" + this.ciudadDestino + "';", destino);
        destino.click();
        //WebElement desListCities = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='A8nfpe yRXJAe P0ukfb a4gL0d TFC9me PRvvEd S7G7Bc Otspu iWO5td BDJ8fb']")));
        WebElement firstMatchD = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//li[@class='n4HaVc ']")));
        firstMatchD.click();
    }

    public static void saveInfo(String ruta, String fileName, List<String[]> lista) throws IOException {
        
        //GUARDA LA INFORMACIÓN EN UN CSV(CAMBIA REL PARAMETRO DE FALSE A TRUE SI SE QUIERE SOBREESCRIBIR EL ARCHIVO CSV SI YA EXISTE)
        String path = ruta + "\\" + fileName + ".csv";
        try (CSVWriter writer = new CSVWriter(new FileWriter(path, false))) {
            lista.forEach(registro -> {
                writer.writeNext(registro);
            });
        }
    }

    @SuppressWarnings("empty-statement")
    public static String getDate(String formato) throws ParseException {
        //RETORNA LA FECHA ACTUAL
        DateFormat formatter = new SimpleDateFormat(formato);
        Date today = new Date();
        return formatter.format(today);
    }

}
